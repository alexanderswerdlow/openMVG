FROM nvidia/cuda:11.4.1-devel-ubuntu20.04

ARG OPENCV_VERSION=4.5.4
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get upgrade -y &&\
    # Install build tools, build dependencies and python
    apt-get install -y \
	python3-pip \
        build-essential \
        cmake \
        git \
        wget \
        unzip \
        yasm \
        pkg-config \
        libswscale-dev \
        libtbb2 \
        libtbb-dev \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        libavformat-dev \
        libpq-dev \
        libxine2-dev \
        libglew-dev \
        libtiff5-dev \
        zlib1g-dev \
        libjpeg-dev \
        libavcodec-dev \
        libavformat-dev \
        libavutil-dev \
        libpostproc-dev \
        libswscale-dev \
        libeigen3-dev \
        libtbb-dev \
        libgtk2.0-dev \
        pkg-config \
        ## Python
        python3-dev \
        python3-numpy \
    && rm -rf /var/lib/apt/lists/*

RUN cd /opt/ &&\
    # Download and unzip OpenCV and opencv_contrib and delte zip files
    wget https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip &&\
    unzip $OPENCV_VERSION.zip &&\
    rm $OPENCV_VERSION.zip &&\
    wget https://github.com/opencv/opencv_contrib/archive/$OPENCV_VERSION.zip &&\
    unzip ${OPENCV_VERSION}.zip &&\
    rm ${OPENCV_VERSION}.zip &&\
    # Create build folder and switch to it
    mkdir /opt/opencv-${OPENCV_VERSION}/build && cd /opt/opencv-${OPENCV_VERSION}/build
    # Cmake configure


RUN apt-get update && apt-get install -y ccache
ENV CCACHE_DIR "/ccache"
ARG threads=10

RUN cd /opt/opencv-${OPENCV_VERSION}/build && cmake \
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
        -DOPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-${OPENCV_VERSION}/modules \
        -DWITH_CUDA=ON \
        -DCMAKE_BUILD_TYPE=RELEASE \
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        # Extra
        -DENABLE_FAST_MATH=1 \
        -DWITH_EIGEN=ON \
        -DBUILD_opencv_python3=ON \
        -D WITH_CUDA=ON \
        -D WITH_CUBLAS=ON \
        -D CUDA_FAST_MATH=1 \
        -D OPENCV_ENABLE_NONFREE=ON \
        ..
RUN cd /opt/opencv-${OPENCV_VERSION}/build && \
    # Make
    make -j"$threads" && \
    # Install to /usr/local/lib
    make install && \
    ldconfig

ADD requirments.txt /tmp
RUN pip install -r /tmp/requirments.txt

RUN apt-get update && apt-get install libpng-dev libjpeg-dev libtiff-dev libxxf86vm1 libxxf86vm-dev libxi-dev libxrandr-dev graphviz -y

ADD . /opt/openMVG
RUN cd /opt/openMVG && git submodule update --init --recursive


RUN mkdir /opt/openmvg_build
WORKDIR /opt/openmvg_build
RUN cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE=RELEASE -DOpenCV_DIR="../opencv_build" -DOpenMVG_USE_OPENCV=ON -DOpenMVG_USE_OCVSIFT=ON ../openMVG/src/

# RUN cmake --build . --target install -- -j"$threads"
# TAG=streetview:openmvg && sudo docker build --build-arg=20 -t $TAG . && sudo docker run -it -v ~/streetview:/home/ -v $CCACHE_DIR:/ccache $TAG /bin/bash